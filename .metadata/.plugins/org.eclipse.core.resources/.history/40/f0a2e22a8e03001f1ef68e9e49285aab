package com.kh.ThreadEx;
/*
process : program + success = 프로그램 싱행 성공 ! 그말은 프로그램 실행중
Thread(스레드) : 실  
스레드는 컴퓨터에서 실제로 작업을 수행하는 것을 의미

두 개 이상의 스레드를 가지고 프로세스를 멀티스레드

스래드를 생성하는 방법
1. Runnable 인터페이스 사용 글래스명 옆에 imp

2.Thread 클래스 상속받기 클래스명 옆에 extends Thread
	메서드와 관계없이 스레드를 시작할 때는 start() 사용해야지 시작할 수 있음
	스레드에서 순서가 스레드가 컴퓨터 안에서 생성되서 시작도는 지점에 따라 달라짐
	
스레드는 기본으로 우선순위가 5
우선순위는 1~10 까지 존재
Thread.MIN_PRIOOITY = 우선순위 1 (기본) = CPU 자원을 가장 적게 확보
THread.NORM_PRIORITY = 우선순위 5 (기본) =
Thread.MAX_PRIOOITY = 우선순위 10 		 = CPU 자원을 더 많이 확보

스레드에서 말하는 우선순위는 CPU 자원을 더 ㅁ낳이 확보하는 우선순위
우선순위가 높은 스레드가 항상 먼저 싱행되는 것은 아님


sleep()	  : ~~초 간 잠자는 상태 유기
			└ 알아서 ~~ 초 실행
// 현재 사용이 권장되지는 않음 있는 하지만 권장			
suspend() : 일시중지
			└ 알아서 일어나기 X ㅌ resume 으로 일어나야지 시작 가능
			
resume()  : 일시 중지한 스레드 다시 시작

wait() 	 : 특정조건이 충족될떄까지 대기
notify() : 대기 중인 스레드를 꺠워 특정 작업을 진행하도록 함


await() signal()



* */
public class ThreadEx extends Thread {

	public void run() {
		System.out.println("스레드 실행 중");
		
		try {
			Thread.sleep(5000);// 1초 동안 정지 
			
			System.out.println("1초 끝");
		} catch (InterruptedException e) {
		
			e.printStackTrace();
		} 
	}

}
